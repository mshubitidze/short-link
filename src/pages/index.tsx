import { type NextPage } from "next";
import Head from "next/head";
import { useState } from "react";

import { api } from "../utils/api";

const Home: NextPage = () => {
  const [shortUrl, setShortUrl] = useState("");

  const getShortUrl = api.shortUrlRouter.shortenUrl.useMutation({
    onSuccess: (data) => {
      console.log("successfully saved in db!");
      setShortUrl(data.shortUrl);
    },
    onError: (error) => {
      console.error("failed ", error);
    },
  });

  const [longUrl, setLongUrl] = useState("");

  const fetchLongUrl = api.shortUrlRouter.fetchLongUrl.useQuery(
    {
      shortUrl: shortUrl,
    },
    {
      enabled: !!shortUrl,
    }
  );

  const fetchAll = api.shortUrlRouter.fetchAll.useQuery();

  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();
    getShortUrl.mutate({
      longUrl,
    });

    setLongUrl("");
  };

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center gap-10 border-blue-200 bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <form
          onSubmit={handleSubmit}
          className="flex w-1/3 flex-col items-center justify-center gap-4 p-4"
        >
          <label className="text-4xl text-white">Enter a long url</label>
          <input
            onChange={(e) => setLongUrl(e.target.value)}
            className="w-full rounded-xl bg-blue-200 p-4"
            type="text"
            value={longUrl}
          />
          <button
            className="w-1/3 rounded-full bg-white/10 p-4 text-2xl text-white"
            type="submit"
          >
            Shorten
          </button>
        </form>
        {shortUrl !== "" && (
          <div className="flex flex-col gap-2 rounded-xl border border-white p-4">
            <p className="rounded-xl bg-clip-text p-4 text-3xl text-white">
              Congratuliation!
            </p>
            <div className="flex flex-row items-center gap-4 p-4">
              <p className="text-2xl text-white">Long: </p>
              <p className="rounded-xl border-2 bg-gradient-to-r from-yellow-500 via-green-500 to-blue-500 bg-clip-text px-4 py-2 text-3xl text-transparent">
                {fetchLongUrl.data}
              </p>
              <p className="text-2xl text-white">Short: </p>
              <p className="rounded-xl border-2 bg-gradient-to-r from-yellow-500 via-green-500 to-blue-500 bg-clip-text px-4 py-2 text-3xl text-transparent">
                {shortUrl}
              </p>
            </div>
          </div>
        )}
        <table className="w-1/2 text-left">
          <caption className="bg-blue-900 py-5 px-10 text-left text-lg font-semibold text-white">
            All Urls
          </caption>
          <thead className="bg-blue-500 text-sm uppercase text-white">
            <tr>
              <th scope="col" className="px-10 py-3">
                Long
              </th>
              <th scope="col" className="px-10 py-3">
                Short
              </th>
            </tr>
          </thead>
          <tbody>
            {fetchAll.data?.map((url) => (
              <tr className="bg-blue-900 text-lg text-white">
                <td className="px-10 py-3">{url.longUrl}</td>
                <td className="px-10 py-3">
                  {url.shortUrl}
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </main>
    </>
  );
};

export default Home;
